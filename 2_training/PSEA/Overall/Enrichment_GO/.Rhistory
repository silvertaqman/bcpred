library(tidyverse)
library(readr)
library(janitor)
library(ggraph)
library(igraph)
# adapt to psea
df <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description) %>% #log_p,go
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits") %>%
	mutate(from=description, to=hits)
network <- graph_from_data_frame(df)
df
df <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description) %>% #log_p,go
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits") %>%
	transmute(from=description, to=hits)
df
network <- graph_from_data_frame(df)
df <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description) %>% #log_p,go
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits") %>%
	transmute(from=description, to=hits) %>%
	drop_na()
df
network <- graph_from_data_frame(df)
network
plot(network)
network <- graph_from_data_frame(df)
network$layout = layout_as_tree(network, circular = TRUE)
df
network <- graph_from_data_frame(df)
network$layout = layout_as_tree(network, circular = TRUE)
#another gotcha is that ig2ggplot needs both vertex names and vertex labels. 
#as of now you just have vertex names. 
V(network)$label = V(network)$name #store label as a vertex attrbute
MetamapsDB::ig2ggplot(network, 
                      dfOnly = FALSE, 
                      labels = FALSE, 
                      metab = TRUE ) + 
    theme(legend.position = 'none')
library(MetamapsDB)
install.packages("library(MetamapsDB)")
install.packages("MetamapsDB")
remotes::install_github("etheleon/MetamapsDB")
remotes::install_github("etheleon/MetamapsDB")
library(igraph)
remove.packages("igraph")
df <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description) %>% #log_p,go
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits")
df
df <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description,log_p,go) %>% #
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits")
df
df
res.cor <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description,log_p,go) %>% #
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits")
res.cor <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description,log_p,go) %>% #
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits") %>%
	transmute(x=go, y=hits, r=log_p, g=description)
res.cor
cor.graph <- as_tbl_graph(res.cor, directed = FALSE)
library(corrr)
install.packages("corr")
install.packages("corrr")
cor.graph <- as_tbl_graph(res.cor, directed = FALSE)
library(tidygraph)
cor.graph <- as_tbl_graph(res.cor, directed = FALSE)
cor.graph
ggraph(cor.graph) + 
  geom_edge_link() + 
  geom_node_point() +
  geom_node_text(
    aes(label = name), size = 3, repel = TRUE
    ) +
  theme_graph()
ggraph(cor.graph) + 
  geom_edge_link() + 
  geom_node_point()
ggraph(cor.graph)
ggraph(cor.graph) + 
  geom_edge_link(aes(width = weight), alpha = 0.2) + 
  scale_edge_width(range = c(0.2, 1)) +
  geom_node_point(aes(color = cyl), size = 2) +
  geom_node_text(aes(label = label), size = 3, repel = TRUE) +
  theme_graph()
ggraph(cor.graph) + 
  geom_edge_link(alpha = 0.2) + 
  scale_edge_width(range = c(0.2, 1)) +
  geom_node_point(aes(color = cyl), size = 2) +
  geom_node_text(aes(label = label), size = 3, repel = TRUE) +
  theme_graph()
cor.graph
res.cor <- read_csv("./_FINAL_GO.csv") %>% 
	clean_names() %>% 
	select(hits, description,log_p,go) %>% #
	separate_wider_delim(
		hits, delim="|", 
		names_sep = "", 
		too_few = "align_start") %>%
	pivot_longer(starts_with("hits"),names_to = NULL, values_to="hits") %>%
	transmute(x=go, y=hits, r=log_p)
cor.graph <- as_tbl_graph(res.cor, directed = FALSE)
ggraph(cor.graph)
res.cor
library(MetamapsDB)
install.packages("MetamapsDB")
install.packages("igraph")
install.packages("igraph")
